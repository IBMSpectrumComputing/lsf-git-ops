#!/usr/bin/env bash

# Copyright International Business Machines Corp, 2020
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

LSF_TOP="configure_your_lsf_top"

echo
echo "Checking LSF configuration changes before accepting the pull request."

if [ ! -d "${LSF_TOP}" ]; then
    echo
    echo "Error: LSF_TOP should be set to your cluster installation top directory."
    echo
    exit 1
fi

TMPDIR=$(mktemp -d -t lsf_conf_XXXXXX)
RET=0
while read old_sha new_sha refname
do
    git -C $TMPDIR clone $PWD &> /dev/null

    CONF_DIR="${TMPDIR}/$(basename $PWD)"
    GIT_DIR=.git git -C ${CONF_DIR} checkout "$new_sha" &> /dev/null

    sed -i "\$a LSF_CONFDIR=${CONF_DIR}" ${CONF_DIR}/lsf.conf
    sed -i "\$a LSB_CONFDIR=${CONF_DIR}/lsbatch" ${CONF_DIR}/lsf.conf

    source $LSF_TOP/conf/profile.lsf
    base_out=$(LSF_ENVDIR=${CONF_DIR} lsadmin ckconfig -v 2>&1)
    batch_out=$(LSF_ENVDIR=${CONF_DIR} badmin ckconfig -v 2>&1)

    if [ "`echo "$base_out" | grep '^Warning: '`" != "" -o "`echo "$base_out" | grep '^There are fatal errors'`" != "" ]; then
        RET=1
        echo "$base_out"
    fi

    if [ "`echo "$batch_out" | grep '^Warning: '`" != "" -o "`echo "$batch_out" | grep '^There are fatal errors'`" != "" ]; then
        RET=1
        echo "$batch_out"
    fi
done
rm -rf ${TMPDIR}

if [ ${RET} -eq 0 ]; then
    echo "LSF configuration checking succeed."
    echo
else
    echo
    echo "Error: LSF configuration checking failed. Please avoid introducing warnings or errors in LSF configuration files."
    echo
fi

exit ${RET}
